# rt4core:test Logging Configuration File (non-kernel tests)
#
# This file is simplified from <java-home>/conf/logging.properties.
#
# How to use this configuration file
# ----------------------------------
# Specify this configuration in a Gradle test suite, in our case at
#     testing.suites.test . targets.all . testTest.configure
# with:
#
# systemProperty(
#     'java.util.logging.config.file',
#     getProject().file('config/test.logging.properties'))
#
# Specify this configuration in the Eclipse IDE with JVM argument:
# -Djava.util.logging.config.file=${workspace_loc:/rt4core}/config/test.logging.properties


############################################################
# Global properties
############################################################

# A comma-separated list of log Handler classes:
#handlers= java.util.logging.ConsoleHandler, java.util.logging.FileHandler
handlers= java.util.logging.ConsoleHandler

# Default global logging level. For any given facility this global level
# can be overridden by a facility-specific level.
.level= INFO


############################################################
# Handler specific properties.
############################################################

# ConsoleHandler
# --------------

# Allow to be verbose (FINEST) and control at facility level.
java.util.logging.ConsoleHandler.level = FINEST
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Customise the SimpleFormatter output format
java.util.logging.SimpleFormatter.format=%1$tH:%1$tm:%1$tS %4$s (%3$s) %5$s%n


# FileHandler
# -----------

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
# Default number of locks FileHandler can obtain synchronously.
java.util.logging.FileHandler.maxLocks = 100
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter


############################################################
# Facility-specific properties.
############################################################

# SLF4J decoder: error->SEVERE, ... debug->FINE, trace->FINEST 

# Levels chosen depend on what we're interested in at the moment.
# The default .level above will step in if a logger is not mentioned.
uk.co.farowl.vsj4.runtime.level = FINEST
uk.co.farowl.vsj4.runtime.kernel.level = FINEST
#org.junit.level = CONFIG
